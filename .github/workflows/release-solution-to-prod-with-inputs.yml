name: release-solution-to-prod-reusable
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  release:
      types: [created]   
      inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: IRISPOC
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: IRISPOC
permissions:
  contents: write
jobs:
  convert-to-managed:
    environment: iris-poc-dev
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{vars.URL}}
        app-id: ${{vars.CLIENTID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANTID}}

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: solutions/${{ inputs.solution_name }}
        solution-file: out/solutions/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{vars.URL}}
        app-id: ${{vars.CLIENTID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANTID}}
        solution-file: out/solutions/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{vars.URL}}
        app-id: ${{vars.CLIENTID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANTID}}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: out/ship/${{ inputs.solution_name }}_managed.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: out/ship/

  release-to-staging:
    needs: [ convert-to-managed ]
    environment: iris-poc-uat
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{vars.URL}}
        app-id: ${{vars.CLIENTID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANTID}}

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: out/release
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{vars.URL}}
        app-id: ${{vars.CLIENTID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANTID}}
        solution-file: out/release/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
